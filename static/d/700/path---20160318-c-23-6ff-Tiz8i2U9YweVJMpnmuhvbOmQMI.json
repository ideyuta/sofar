{"data":{"post":{"html":"<h2>PostCSS</h2>\n<p><a href=\"https://github.com/postcss/postcss\">https://github.com/postcss/postcss</a></p>\n<ul>\n<li>PostCSSはJavaScript製のCSSパーサ</li>\n<li>いろんなプラグインを組み合わせてモダンなCSS開発環境を作り出せる</li>\n<li>webpackと合わせて使うと便利</li>\n</ul>\n<h3>Webpack使用例</h3>\n<ol>\n<li>\n<p>まずはインストール</p>\n</li>\n<li>\n<p>PostCSS本体とLoaderに加えて、よく使うCSSNext、import、mixinsといったプラグインを入れる</p>\n</li>\n<li>\n<p>postcss-loaderに通すだけではファイルとして書き出されないので、file-loaderを使う</p>\n<pre><code>npm i postcss postcss-loader file-loader postcss-cssnext postcss-import postcss-mixins\n</code></pre>\n</li>\n<li>\n<p>webpack.config.jsを作る</p>\n<pre><code class=\"language-js\">// PostCSSの記述のみで単純化した例\n\nvar cssnext = require('postcss-cssnext');\nvar atImport = require('postcss-import');\nvar atMixins = require('postcss-mixins');\n\nmodule.exports = {\n  context: `${__dirname}/src`,\n  entry: {\n    css: './styles/base.css'\n  },\n  module: {\n    loaders: [{\n      loader: 'file?name=[name].[ext]!postcss-loader',\n      test: /\\.css$/\n    }]\n  },\n  output: {\n    path: `${__dirname}/dist`\n  },\n  postcss: () => [atImport, atMixins, cssnext]\n};\n</code></pre>\n</li>\n<li>\n<p>これでdistディレクトリにコンパイル済みのbase.cssが吐き出される</p>\n</li>\n</ol>\n<h3>便利プラグインたち</h3>\n<ul>\n<li>\n<p><a href=\"https://github.com/postcss/postcss-import\">import</a></p>\n<ul>\n<li>@importが使えるようになる</li>\n<li>node_modules下のファイルもimportできる</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/postcss/postcss-mixins\">mixins</a></p>\n<ul>\n<li>@mixinsが使えるようになる</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/postcss/postcss-mixins\">conditionals</a></p>\n<ul>\n<li>@ifが使えるようになる</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/postcss/autoprefixer\">autoprefixer</a></p>\n<ul>\n<li>vender-prefixをつけてくれる</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/MoOx/postcss-cssnext\">cssnext</a></p>\n<ul>\n<li>策定中のCSS記法を使えるようにしてくれる</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"2016-03-18 14:22:25 (金)","path":"/20160318/","title":"PostCSS"}},"posts":{"edges":[{"next":null,"previous":null,"node":{"html":"<h2>PostCSS</h2>\n<p><a href=\"https://github.com/postcss/postcss\">https://github.com/postcss/postcss</a></p>\n<ul>\n<li>PostCSSはJavaScript製のCSSパーサ</li>\n<li>いろんなプラグインを組み合わせてモダンなCSS開発環境を作り出せる</li>\n<li>webpackと合わせて使うと便利</li>\n</ul>\n<h3>Webpack使用例</h3>\n<ol>\n<li>\n<p>まずはインストール</p>\n</li>\n<li>\n<p>PostCSS本体とLoaderに加えて、よく使うCSSNext、import、mixinsといったプラグインを入れる</p>\n</li>\n<li>\n<p>postcss-loaderに通すだけではファイルとして書き出されないので、file-loaderを使う</p>\n<pre><code>npm i postcss postcss-loader file-loader postcss-cssnext postcss-import postcss-mixins\n</code></pre>\n</li>\n<li>\n<p>webpack.config.jsを作る</p>\n<pre><code class=\"language-js\">// PostCSSの記述のみで単純化した例\n\nvar cssnext = require('postcss-cssnext');\nvar atImport = require('postcss-import');\nvar atMixins = require('postcss-mixins');\n\nmodule.exports = {\n  context: `${__dirname}/src`,\n  entry: {\n    css: './styles/base.css'\n  },\n  module: {\n    loaders: [{\n      loader: 'file?name=[name].[ext]!postcss-loader',\n      test: /\\.css$/\n    }]\n  },\n  output: {\n    path: `${__dirname}/dist`\n  },\n  postcss: () => [atImport, atMixins, cssnext]\n};\n</code></pre>\n</li>\n<li>\n<p>これでdistディレクトリにコンパイル済みのbase.cssが吐き出される</p>\n</li>\n</ol>\n<h3>便利プラグインたち</h3>\n<ul>\n<li>\n<p><a href=\"https://github.com/postcss/postcss-import\">import</a></p>\n<ul>\n<li>@importが使えるようになる</li>\n<li>node_modules下のファイルもimportできる</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/postcss/postcss-mixins\">mixins</a></p>\n<ul>\n<li>@mixinsが使えるようになる</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/postcss/postcss-mixins\">conditionals</a></p>\n<ul>\n<li>@ifが使えるようになる</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/postcss/autoprefixer\">autoprefixer</a></p>\n<ul>\n<li>vender-prefixをつけてくれる</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/MoOx/postcss-cssnext\">cssnext</a></p>\n<ul>\n<li>策定中のCSS記法を使えるようにしてくれる</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"2016-03-18 14:22:25 (金)","path":"/20160318/","title":"PostCSS"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}