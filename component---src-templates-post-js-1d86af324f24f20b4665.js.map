{"version":3,"file":"component---src-templates-post-js-1d86af324f24f20b4665.js","mappings":"sMAEMA,EAAO,CACXC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACTC,QAAS,GACTC,MAAO,GACPC,KAAM,GAMR,EAAeC,EAAAA,QAAAA,IAAAA,WAAf,kHACY,SAACC,GAAD,OAAWR,EAAKQ,EAAMC,KAAtB,IACI,SAACD,GAAD,OAAWR,EAAKQ,EAAMC,KAAtB,IACD,SAACD,GAAD,OAAWR,EAAKQ,EAAMC,KAAtB,IACJ,SAACD,GAAD,OAAWR,EAAKQ,EAAMC,KAAtB,I,UCZLC,EAASH,EAAAA,QAAAA,EAAAA,WAAH,2DAAGA,CAAH,wLAUMI,EAAAA,EAAAA,QAIZC,GAAcL,EAAAA,EAAAA,SAAOG,GAAV,2EAAGH,CAAH,2BAGXM,EAAgBN,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,2BACHI,EAAAA,EAAAA,QAGVG,EAAOP,EAAAA,QAAAA,KAAAA,WAAH,yDAAGA,CAAH,+CACCI,EAAAA,EAAAA,SAILI,EAAUR,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,0BAKE,SAASS,EAAQR,GAC9B,OACE,gBAACO,EAAD,KACE,gBAACF,EAAD,KACGL,EAAMS,MACL,gBAACP,EAAD,CAAQQ,MAAMC,EAAAA,EAAAA,IAAWX,EAAMS,KAAKG,YAAYC,OAC7Cb,EAAMS,KAAKG,YAAYE,MACxB,gBAACC,EAAD,CAAQd,KAAK,SACb,gBAAC,EAAD,KAAOD,EAAMS,KAAKG,YAAYI,QAIpC,gBAACX,EAAD,KACGL,EAAMiB,MACL,gBAACb,EAAD,CAAaM,MAAMC,EAAAA,EAAAA,IAAWX,EAAMiB,KAAKL,YAAYC,OAClDb,EAAMiB,KAAKL,YAAYE,MACxB,gBAACC,EAAD,CAAQd,KAAK,SACb,gBAAC,EAAD,KAAOD,EAAMiB,KAAKL,YAAYI,QAMzC,CClDD,IAAME,EAAUnB,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,wCAIPO,EAAOP,EAAAA,QAAAA,EAAAA,WAAH,sDAAGA,CAAH,eACCI,EAAAA,EAAAA,UAELgB,EAAQpB,EAAAA,QAAAA,GAAAA,WAAH,uDAAGA,CAAH,yDACAI,EAAAA,EAAAA,UAMI,SAASiB,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,EAA8BA,EAAKC,KAA3BV,EAAR,EAAQA,YAAaW,EAArB,EAAqBA,KACfC,EAAcH,EAAKI,MAAMC,MAAMC,MACnC,SAACC,GAAD,OAAOA,EAAEC,KAAKjB,YAAYC,OAASD,EAAYC,IAA/C,IAEF,OACE,2BACE,gBAACiB,EAAA,EAAD,CAAQhB,MAAUF,EAAYE,MAAjB,aACb,gBAACiB,EAAA,EAAD,MACA,gBAACb,EAAD,KACE,gBAACC,EAAD,KAAQP,EAAYE,OACpB,gBAAC,EAAD,gBAAkBF,EAAYI,MAC9B,gBAACD,EAAD,CAAQd,KAAK,YACb,uBAAK+B,UAAU,OAAOC,wBAAyB,CAAEC,OAAQX,MAE3D,gBAACf,EAAD,CAASS,KAAMO,EAAYP,KAAMR,KAAMe,EAAYW,WAGxD,C","sources":["webpack://sofar/./src/components/Spacer.js","webpack://sofar/./src/components/PostNav.js","webpack://sofar/./src/templates/post.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst SIZE = {\n  large: 48,\n  medium: 32,\n  minimum: 4,\n  regular: 24,\n  small: 16,\n  tiny: 8,\n};\n\n/**\n * Spacer\n */\nexport default styled.div`\n  height: ${(props) => SIZE[props.size]}px;\n  min-height: ${(props) => SIZE[props.size]}px;\n  min-width: ${(props) => SIZE[props.size]}px;\n  width: ${(props) => SIZE[props.size]}px;\n`;\n","import React from 'react';\nimport { withPrefix } from 'gatsby-link';\nimport styled from 'styled-components';\nimport { colors } from '../assets';\nimport Spacer from './Spacer';\n\nconst Anchor = styled.a`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  height: 100%;\n  padding: 32px 16px;\n  text-decoration: none;\n  width: 100%;\n  &:hover {\n    background: ${colors.gray50};\n    text-decoration: none;\n  }\n`;\nconst AnchorRight = styled(Anchor)`\n  align-items: flex-end;\n`;\nconst AnchorWrapper = styled.div`\n  background: ${colors.gray20};\n  flex: 1;\n`;\nconst Date = styled.span`\n  color: ${colors.gray500};\n  display: block;\n  font-size: 0.75rem;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport default function PostNav(props) {\n  return (\n    <Wrapper>\n      <AnchorWrapper>\n        {props.prev && (\n          <Anchor href={withPrefix(props.prev.frontmatter.path)}>\n            {props.prev.frontmatter.title}\n            <Spacer size=\"tiny\" />\n            <Date>{props.prev.frontmatter.date}</Date>\n          </Anchor>\n        )}\n      </AnchorWrapper>\n      <AnchorWrapper>\n        {props.next && (\n          <AnchorRight href={withPrefix(props.next.frontmatter.path)}>\n            {props.next.frontmatter.title}\n            <Spacer size=\"tiny\" />\n            <Date>{props.next.frontmatter.date}</Date>\n          </AnchorRight>\n        )}\n      </AnchorWrapper>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { colors } from '../assets';\nimport '../assets/post.css';\nimport Header from '../components/Header';\nimport Spacer from '../components/Spacer';\nimport PostNav from '../components/PostNav';\n\nconst Content = styled.div`\n  padding: 20px;\n  word-break: break-all;\n`;\nconst Date = styled.p`\n  color: ${colors.gray1000};\n`;\nconst Title = styled.h2`\n  color: ${colors.gray1000};\n  font-size: 2.4rem;\n  font-weight: 400;\n  margin: 0;\n`;\n\nexport default function Template({ data }) {\n  const { frontmatter, html } = data.post;\n  const currentPost = data.posts.edges.find(\n    (p) => p.node.frontmatter.path === frontmatter.path\n  );\n  return (\n    <div>\n      <Helmet title={`${frontmatter.title} - Sofar`} />\n      <Header />\n      <Content>\n        <Title>{frontmatter.title}</Title>\n        <Date>{`Posted: ${frontmatter.date}`}</Date>\n        <Spacer size=\"regular\" />\n        <div className=\"post\" dangerouslySetInnerHTML={{ __html: html }} />\n      </Content>\n      <PostNav next={currentPost.next} prev={currentPost.previous} />\n    </div>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date\n        path\n        title\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: ASC }\n    ) {\n      edges {\n        next {\n          frontmatter {\n            date\n            path\n            title\n          }\n        }\n        previous {\n          frontmatter {\n            date\n            path\n            title\n          }\n        }\n        node {\n          frontmatter {\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["SIZE","large","medium","minimum","regular","small","tiny","styled","props","size","Anchor","colors","AnchorRight","AnchorWrapper","Date","Wrapper","PostNav","prev","href","withPrefix","frontmatter","path","title","Spacer","date","next","Content","Title","Template","data","post","html","currentPost","posts","edges","find","p","node","Helmet","Header","className","dangerouslySetInnerHTML","__html","previous"],"sourceRoot":""}