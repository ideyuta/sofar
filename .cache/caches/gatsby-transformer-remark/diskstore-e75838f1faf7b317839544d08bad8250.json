{"expireTime":9007200813331267000,"key":"transformer-remark-markdown-html-5a0a613c8ebc4cf58f89cd28f6c4cf9a-@raae/gatsby-remark-oembedgatsby-remark-responsive-iframegatsby-remark-prismjs-","val":"<h2>React Native stylesheet practice</h2>\n<ul>\n<li>\n<p>StyleSheet.createするためにはflatなobjectでなければならない</p>\n<ul>\n<li>createすると参照先が作られるのでパフォーマンスが改善するっぽい？</li>\n<li>バリデーションを実行前に実施できる</li>\n<li>必須ではなく、ただのオブジェクトを渡しても問題ない</li>\n</ul>\n</li>\n<li>\n<p>StyleObjectの命名規則がないため煩雑になる</p>\n<ul>\n<li>StyleSheet.createを利用しようとした場合、ネストできないのでkeyの記述が面倒</li>\n<li>ネスト構文もcreateできるようにする<a href=\"https://github.com/pjjanak/react-native-nested-stylesheets\">react-native-nested-stylesheets</a>というプロジェクトも存在するが、開発されてない</li>\n</ul>\n</li>\n<li>\n<p>共通スタイルを定義するひな型がない</p>\n<ul>\n<li>constantsやbase/commonスタイルを利用するようにしないとデザインの一貫性が保てないが、ベストプラクティスはまだない</li>\n<li>mixin形式の関数もあると便利そう</li>\n<li>ひとまずbase/common/constantsオブジェクトを作って、各スタイルファイルでimportして使う</li>\n</ul>\n</li>\n<li>\n<p>スタイルファイルの外部化</p>\n<ul>\n<li>一つのファイル（component）内で完結した方が良いと考えているのが最近のCSSinJS界隈（React界隈も）</li>\n<li>コンポーネントが厚くなってきた場合、スタイルを含ませると可読性が低下する</li>\n<li>外部化すると全てのファイルでreact-native等の依存ファイルをimportしなければならず面倒</li>\n</ul>\n</li>\n<li>\n<p>css/sassをstyleオブジェクトに変換する<a href=\"https://github.com/sabeurthabti/react-native-css\">react-native-css</a></p>\n<ul>\n<li>ネストした構文で書けるが、スペース区切りの文字列でオブジェクトが生成されるためドットつなぎで呼び出せないかも（未確認）</li>\n<li>react-nativeのメソッドを実行しなければならない場合などの対応が面倒そう</li>\n</ul>\n</li>\n<li>\n<p>レイアウトスタイルの扱い</p>\n<ul>\n<li>width/heightなどのレイアウトスタイル（数値）はコンポーネント内の処理で利用する場合がある</li>\n<li>そのため、スタイルで管理するよりもコンポーネントで管理すべきかもしれない</li>\n<li>そうなるとコンポーネント内にスタイルを持っていた方が良いのかも</li>\n</ul>\n</li>\n</ul>"}