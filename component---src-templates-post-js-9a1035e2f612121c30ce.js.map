{"version":3,"file":"component---src-templates-post-js-9a1035e2f612121c30ce.js","mappings":"qMAEA,MAAMA,EAAO,CACXC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACTC,QAAS,GACTC,MAAO,GACPC,KAAM,GAMR,MAAeC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,SAAAC,YAAA,eAAzB,CAAyB,gEACZC,GAAUZ,EAAKY,EAAMC,QACjBD,GAAUZ,EAAKY,EAAMC,QACtBD,GAAUZ,EAAKY,EAAMC,QACzBD,GAAUZ,EAAKY,EAAMC,Q,UCZjC,MAAMC,EAASP,EAAAA,QAAOQ,EAACN,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAARJ,CAAQ,wLAULS,EAAAA,EAAOC,QAInBC,GAAcX,EAAAA,EAAAA,SAAOO,GAAOL,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAdJ,CAAc,2BAG5BY,EAAgBZ,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,2BAChBS,EAAAA,EAAOI,QAGjBC,EAAOd,EAAAA,QAAOe,KAAIb,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAXJ,CAAW,+CACbS,EAAAA,EAAOO,SAIZC,EAAUjB,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAVJ,CAAU,0BAKX,SAASkB,EAAQb,GAC9B,OACEc,EAAAA,cAACF,EAAO,KACNE,EAAAA,cAACP,EAAa,KACXP,EAAMe,MACLD,EAAAA,cAACZ,EAAM,CAACc,MAAMC,EAAAA,EAAAA,IAAWjB,EAAMe,KAAKG,YAAYC,OAC7CnB,EAAMe,KAAKG,YAAYE,MACxBN,EAAAA,cAACO,EAAM,CAACpB,KAAK,SACba,EAAAA,cAACL,EAAI,KAAET,EAAMe,KAAKG,YAAYI,QAIpCR,EAAAA,cAACP,EAAa,KACXP,EAAMuB,MACLT,EAAAA,cAACR,EAAW,CAACU,MAAMC,EAAAA,EAAAA,IAAWjB,EAAMuB,KAAKL,YAAYC,OAClDnB,EAAMuB,KAAKL,YAAYE,MACxBN,EAAAA,cAACO,EAAM,CAACpB,KAAK,SACba,EAAAA,cAACL,EAAI,KAAET,EAAMuB,KAAKL,YAAYI,QAM1C,CClDA,MAAME,EAAU7B,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAVJ,CAAU,wCAIpBc,EAAOd,EAAAA,QAAO8B,EAAC5B,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAARJ,CAAQ,eACVS,EAAAA,EAAOsB,UAEZC,EAAQhC,EAAAA,QAAOiC,GAAE/B,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAATJ,CAAS,yDACZS,EAAAA,EAAOsB,UAMH,SAASG,EAAQC,GAAY,IAAX,KAAEC,GAAMD,EACvC,MAAM,YAAEZ,EAAW,KAAEc,GAASD,EAAKE,KAC7BC,EAAcH,EAAKI,MAAMC,MAAMC,MAClCZ,GAAMA,EAAEa,KAAKpB,YAAYC,OAASD,EAAYC,OAEjD,OACEL,EAAAA,cAAA,WACEA,EAAAA,cAACyB,EAAAA,EAAM,CAACnB,MAAO,GAAGF,EAAYE,kBAC9BN,EAAAA,cAAC0B,EAAAA,EAAM,MACP1B,EAAAA,cAACU,EAAO,KACNV,EAAAA,cAACa,EAAK,KAAET,EAAYE,OACpBN,EAAAA,cAACL,EAAI,KAAE,WAAWS,EAAYI,QAC9BR,EAAAA,cAACO,EAAM,CAACpB,KAAK,YACba,EAAAA,cAAA,OAAK2B,UAAU,OAAOC,wBAAyB,CAAEC,OAAQX,MAE3DlB,EAAAA,cAACD,EAAO,CAACU,KAAMW,EAAYX,KAAMR,KAAMmB,EAAYU,WAGzD,C","sources":["webpack://sofar/./src/components/Spacer.js","webpack://sofar/./src/components/PostNav.js","webpack://sofar/./src/templates/post.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst SIZE = {\n  large: 48,\n  medium: 32,\n  minimum: 4,\n  regular: 24,\n  small: 16,\n  tiny: 8,\n};\n\n/**\n * Spacer\n */\nexport default styled.div`\n  height: ${(props) => SIZE[props.size]}px;\n  min-height: ${(props) => SIZE[props.size]}px;\n  min-width: ${(props) => SIZE[props.size]}px;\n  width: ${(props) => SIZE[props.size]}px;\n`;\n","import React from 'react';\nimport { withPrefix } from 'gatsby-link';\nimport styled from 'styled-components';\nimport { colors } from '../assets';\nimport Spacer from './Spacer';\n\nconst Anchor = styled.a`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  height: 100%;\n  padding: 32px 16px;\n  text-decoration: none;\n  width: 100%;\n  &:hover {\n    background: ${colors.gray50};\n    text-decoration: none;\n  }\n`;\nconst AnchorRight = styled(Anchor)`\n  align-items: flex-end;\n`;\nconst AnchorWrapper = styled.div`\n  background: ${colors.gray20};\n  flex: 1;\n`;\nconst Date = styled.span`\n  color: ${colors.gray500};\n  display: block;\n  font-size: 0.75rem;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport default function PostNav(props) {\n  return (\n    <Wrapper>\n      <AnchorWrapper>\n        {props.prev && (\n          <Anchor href={withPrefix(props.prev.frontmatter.path)}>\n            {props.prev.frontmatter.title}\n            <Spacer size=\"tiny\" />\n            <Date>{props.prev.frontmatter.date}</Date>\n          </Anchor>\n        )}\n      </AnchorWrapper>\n      <AnchorWrapper>\n        {props.next && (\n          <AnchorRight href={withPrefix(props.next.frontmatter.path)}>\n            {props.next.frontmatter.title}\n            <Spacer size=\"tiny\" />\n            <Date>{props.next.frontmatter.date}</Date>\n          </AnchorRight>\n        )}\n      </AnchorWrapper>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { colors } from '../assets';\nimport '../assets/post.css';\nimport Header from '../components/Header';\nimport Spacer from '../components/Spacer';\nimport PostNav from '../components/PostNav';\n\nconst Content = styled.div`\n  padding: 20px;\n  word-break: break-all;\n`;\nconst Date = styled.p`\n  color: ${colors.gray1000};\n`;\nconst Title = styled.h2`\n  color: ${colors.gray1000};\n  font-size: 2.4rem;\n  font-weight: 400;\n  margin: 0;\n`;\n\nexport default function Template({ data }) {\n  const { frontmatter, html } = data.post;\n  const currentPost = data.posts.edges.find(\n    (p) => p.node.frontmatter.path === frontmatter.path\n  );\n  return (\n    <div>\n      <Helmet title={`${frontmatter.title} - Sofar`} />\n      <Header />\n      <Content>\n        <Title>{frontmatter.title}</Title>\n        <Date>{`Posted: ${frontmatter.date}`}</Date>\n        <Spacer size=\"regular\" />\n        <div className=\"post\" dangerouslySetInnerHTML={{ __html: html }} />\n      </Content>\n      <PostNav next={currentPost.next} prev={currentPost.previous} />\n    </div>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date\n        path\n        title\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { frontmatter: { date: ASC } }\n    ) {\n      edges {\n        next {\n          frontmatter {\n            date\n            path\n            title\n          }\n        }\n        previous {\n          frontmatter {\n            date\n            path\n            title\n          }\n        }\n        node {\n          frontmatter {\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["SIZE","large","medium","minimum","regular","small","tiny","styled","div","withConfig","displayName","componentId","props","size","Anchor","a","colors","gray50","AnchorRight","AnchorWrapper","gray20","Date","span","gray500","Wrapper","PostNav","React","prev","href","withPrefix","frontmatter","path","title","Spacer","date","next","Content","p","gray1000","Title","h2","Template","_ref","data","html","post","currentPost","posts","edges","find","node","Helmet","Header","className","dangerouslySetInnerHTML","__html","previous"],"sourceRoot":""}