{"version":3,"sources":["webpack:///./src/components/Spacer.js","webpack:///./src/components/PostNav.js","webpack:///./src/templates/post.js","webpack:///./src/assets/index.js","webpack:///./src/components/Header.js"],"names":["SIZE","large","medium","minimum","regular","small","tiny","styled","div","withConfig","displayName","componentId","props","size","Anchor","a","colors","gray50","AnchorRight","AnchorWrapper","gray20","Date","span","gray500","Wrapper","PostNav","react_default","createElement","prev","href","withPrefix","frontmatter","path","title","Spacer","PostNav_Date","date","next","Content","p","gray1000","Title","h2","Template","_ref","data","_data$post","post","html","currentPost","posts","edges","find","node","Helmet","Header","post_Date","className","dangerouslySetInnerHTML","__html","previous","pageQuery","__webpack_require__","d","__webpack_exports__","gray100","gray200","gray300","gray400","gray600","gray700","gray800","gray900","blue20","blue100","blue300","blue500","blue700","blue900","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_assets__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-templates-post-js-575ba1f7600556c711e4.js","sourcesContent":["import styled from 'styled-components';\n\nconst SIZE = {\n  large: 48,\n  medium: 32,\n  minimum: 4,\n  regular: 24,\n  small: 16,\n  tiny: 8,\n};\n\n/**\n * Spacer\n */\nexport default styled.div`\n  height: ${props => SIZE[props.size]}px;\n  min-height: ${props => SIZE[props.size]}px;\n  min-width: ${props => SIZE[props.size]}px;\n  width: ${props => SIZE[props.size]}px;\n`;\n","import React from 'react';\nimport { withPrefix } from 'gatsby-link';\nimport styled from 'styled-components';\nimport { colors } from '../assets';\nimport Spacer from './Spacer';\n\nconst Anchor = styled.a`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  height: 100%;\n  padding: 32px 16px;\n  text-decoration: none;\n  width: 100%;\n  &:hover {\n    background: ${colors.gray50};\n  }\n`;\nconst AnchorRight = styled(Anchor)`\n  align-items: flex-end;\n`;\nconst AnchorWrapper = styled.div`\n  background: ${colors.gray20};\n  flex: 1;\n`;\nconst Date = styled.span`\n  color: ${colors.gray500};\n  display: block;\n  font-size: 0.75rem;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport default function PostNav(props) {\n  return (\n    <Wrapper>\n      <AnchorWrapper>\n        {props.prev && (\n          <Anchor href={withPrefix(props.prev.frontmatter.path)}>\n            {props.prev.frontmatter.title}\n            <Spacer size=\"tiny\" />\n            <Date>{props.prev.frontmatter.date}</Date>\n          </Anchor>\n        )}\n      </AnchorWrapper>\n      <AnchorWrapper>\n        {props.next && (\n          <AnchorRight href={withPrefix(props.next.frontmatter.path)}>\n            {props.next.frontmatter.title}\n            <Spacer size=\"tiny\" />\n            <Date>{props.next.frontmatter.date}</Date>\n          </AnchorRight>\n        )}\n      </AnchorWrapper>\n    </Wrapper>\n  )\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { colors } from '../assets';\nimport '../assets/post.css';\nimport Header from '../components/Header';\nimport Spacer from '../components/Spacer';\nimport PostNav from '../components/PostNav';\n\nconst Content = styled.div`\n  padding: 20px;\n  word-break: break-all;\n`;\nconst Date = styled.p`\n  color: ${colors.gray1000};\n`;\nconst Title = styled.h2`\n  color: ${colors.gray1000};\n  font-size: 2.4rem;\n  font-weight: 400;\n  margin: 0;\n`;\n\nexport default function Template({ data }) {\n  const { frontmatter, html } = data.post;\n  const currentPost = data.posts.edges.find(p => p.node.frontmatter.path === frontmatter.path);\n  return (\n    <div>\n      <Helmet title={`${frontmatter.title} - Sofar`} />\n      <Header />\n      <Content>\n        <Title>{frontmatter.title}</Title>\n        <Date>{`Created: ${frontmatter.date}`}</Date>\n        <Spacer size=\"regular\" />\n        <div className=\"post\" dangerouslySetInnerHTML={{ __html: html }} />\n      </Content>\n      <PostNav\n        next={currentPost.next}\n        prev={currentPost.previous}\n      />\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter { date path title }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date] order: ASC }\n    ) {\n      edges {\n        next {\n          frontmatter { date path title }\n        }\n        previous {\n          frontmatter { date path title }\n        }\n        node {\n          frontmatter { path }\n        }\n      }\n    }\n  }\n`\n","export const colors = {\n  gray20: '#f4f4f6',\n  gray50: '#e8e8ee',\n  gray100: '#dcdce5',\n  gray200: '#d0d0d8',\n  gray300: '#c4c4cc',\n  gray400: '#b8b8c0',\n  gray500: '#808088',\n  gray600: '#686870',\n  gray700: '#505058',\n  gray800: '#38383e',\n  gray900: '#202026',\n  gray1000: '#08080e',\n  blue20: '#f0f5ff',\n  blue100: '#b4dcfc',\n  blue300: '#78b6e8',\n  blue500: '#4794d5',\n  blue700: '#0278be',\n  blue900: '#0062a5',\n};\n","import React from 'react';\nimport { withPrefix } from 'gatsby-link';\nimport styled from 'styled-components';\nimport { colors } from '../assets';\n\nconst Anchor = styled.a`\n  display: inline-block;\n  color: ${colors.gray900};\n  font-size: 1rem;\n  font-weight: 900;\n  padding: 20px;\n  text-decoration: none;\n  :hover {\n    color: ${colors.blue500};\n  }\n`;\n\nexport default function PostNav(props) {\n  return (\n    <Anchor href={withPrefix('/')}>\n      Sofar\n    </Anchor>\n  )\n}\n"],"sourceRoot":""}